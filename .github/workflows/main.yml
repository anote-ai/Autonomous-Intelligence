name: Backend Test & Trigger EC2

on:
  push:
    branches: [main, development]
    paths:
      - '**'   # ensure changes to any file trigger this
  pull_request:
    paths:
      - 'backend/**'

jobs:
  backend_tests:
    name: Run Backend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install backend dependencies
        working-directory: backend
        run: pip install -r requirements.txt

      - name: Run backend tests with pytest
        working-directory: backend
        run: pytest

  trigger_test_environment:
    name: Trigger Test Environment
    needs: backend_tests
    if: github.ref == 'refs/heads/development' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create test-env.yml dynamically
        run: |
          echo "is_testing: true" > test-env.yml
          echo 'start_time: "2025-08-04T10:00:00Z"' >> test-env.yml
          echo 'end_time: "2025-08-04T10:05:00Z"' >> test-env.yml

      - name: Install yq for YAML parsing
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Check if testing is enabled
        id: check_testing
        run: |
          is_testing=$(yq -r '.is_testing' test-env.yml)
          echo "is_testing=$is_testing" >> $GITHUB_OUTPUT

      - name: Get start and end times
        if: steps.check_testing.outputs.is_testing == 'true'
        id: get_times
        run: |
          start_time=$(yq -r '.start_time' test-env.yml)
          end_time=$(yq -r '.end_time' test-env.yml)
          echo "start_time=$start_time" >> $GITHUB_OUTPUT
          echo "end_time=$end_time" >> $GITHUB_OUTPUT

      - name: Trigger EC2 Start Lambda
        if: steps.check_testing.outputs.is_testing == 'true'
        run: |
          curl -X POST \
            "https://e6kw2owrj0.execute-api.us-east-1.amazonaws.com/Dev/launch" \
            -H "Content-Type: application/json" \
            -d "{\"is_testing\": true, \"start_time\": \"${{ steps.get_times.outputs.start_time }}\", \"end_time\": \"${{ steps.get_times.outputs.end_time }}\"}"
